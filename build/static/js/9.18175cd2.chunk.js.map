{"version":3,"sources":["@core/components/form-dev/services/deleteDeveloper.js","@core/components/react-data-bale/DropdownActions.js","@core/components/pagination/index.js","@core/components/react-data-bale/index.js","views/Home.js","@core/components/breadcrumbs/index.js","configs/toastConfig.js"],"names":["a","developerID","clientAxios","delete","status","console","log","deleteDeveloper","DropdownActions","row","dispatch","useDispatch","devs","useSelector","state","deleteDevHandler","removedDev","filter","dev","handleSetDevs","Toast","fire","icon","title","UncontrolledDropdown","tag","className","DropdownToggle","href","onClick","e","preventDefault","role","DropdownMenu","right","DropdownItem","Link","to","handleChangeDev","size","Swal","text","showCancelButton","then","result","isConfirmed","confirmDeleteDevHandler","PaginationComponent","props","currentPage","rowCount","rowsPerPage","onChangePage","pages","Math","ceil","Pagination","PaginationItem","disabled","PaginationLink","previous","active","next","DataTableComponent","useState","loadingTable","setLoadingTable","columns","name","selector","sortable","center","cell","useEffect","length","get","data","progressPending","progressComponent","color","noHeader","pagination","paginationPerPage","noDataComponent","customStyles","headRow","style","backgroundColor","paginationComponentOptions","rowsPerPageText","rangeSeparatorText","noRowsPerPage","selectAllRowsItem","selectAllRowsItemText","paginationComponent","Row","Home","history","useHistory","breadCrumbActive","label","Card","CardHeader","CardTitle","push","CardBody","BreadCrumbs","breadCrumbTitle","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer"],"mappings":"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","file":"static/js/9.18175cd2.chunk.js","sourcesContent":["import { clientAxios } from '../../../../configs/axiosConfig'\r\n\r\nasync function deleteDeveloper({ developerID }) {\r\n    try {\r\n        const { status } = await clientAxios.delete(`/developers/${developerID}`)\r\n        return { status }\r\n    } catch (error) {\r\n        console.log(error)\r\n        return { status: error.status }\r\n    }\r\n}\r\n\r\nexport default deleteDeveloper","import React from 'react'\r\nimport { Edit, Trash2 } from 'react-feather'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { DropdownMenu, DropdownToggle, UncontrolledDropdown, DropdownItem } from 'reactstrap'\r\nimport { handleChangeDev, handleSetDevs } from '../../../redux/actions/devs'\r\nimport { Toast } from '../../../configs/toastConfig'\r\nimport deleteDeveloper from '../form-dev/services/deleteDeveloper'\r\nimport Swal from 'sweetalert2'\r\n\r\nfunction DropdownActions({ row }) {\r\n\r\n  const dispatch = useDispatch()\r\n  const devs = useSelector(state => state.devs.devs)\r\n\r\n  const deleteDevHandler = async ({ developerID }) => {\r\n    const { status } = await deleteDeveloper({ developerID })\r\n    if (status === 204) {\r\n      const removedDev = devs.filter(dev => dev.developerID !== developerID)\r\n      dispatch(handleSetDevs(removedDev))\r\n      Toast.fire({\r\n        icon: 'success',\r\n        title: 'Desarrollador borrado con Éxito'\r\n      })\r\n    } else {\r\n      Toast.fire({\r\n        icon: 'error',\r\n        title: 'Ocurrió un error, intente nuevamente más tarde'\r\n      })\r\n    }\r\n  }\r\n\r\n  const confirmDeleteDevHandler = ({ developerID }) => {\r\n    Swal.fire({\r\n      icon: \"warning\",\r\n      title: \"Estás por borrar un desarrollador\",\r\n      text: \"Estás seguro/a de continuar?\",\r\n      showCancelButton: true\r\n    }).then(result => {\r\n      if (result.isConfirmed) {\r\n        deleteDevHandler({ developerID })\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <UncontrolledDropdown tag='li' className='dropdown-actions nav-link'>\r\n      <DropdownToggle href='/' tag='a' className='nav-link' onClick={e => e.preventDefault()}>\r\n        <i className=\"fas fa-ellipsis-v\" role=\"button\"></i>\r\n      </DropdownToggle>\r\n      <DropdownMenu right>\r\n        <DropdownItem tag={Link} to='/editar' onClick={() => {\r\n          dispatch(handleChangeDev(row))\r\n        }}>\r\n          <Edit size={14} className='mr-75' />\r\n          <span className='align-middle'>Editar</span>\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to='' onClick={e => {\r\n          // dispatch()\r\n          e.preventDefault()\r\n          confirmDeleteDevHandler({ developerID: row.developerID })\r\n        }}>\r\n          <Trash2 size={14} className='mr-75' />\r\n          <span className='align-middle'>Borrar</span>\r\n        </DropdownItem>\r\n      </DropdownMenu>\r\n    </UncontrolledDropdown>\r\n  )\r\n}\r\n\r\nexport default DropdownActions","import { Pagination, PaginationItem, PaginationLink } from 'reactstrap'\r\nimport \"./paginationcomponent.scss\"\r\n\r\nfunction PaginationComponent(props) {\r\n\r\n    const { currentPage, rowCount, rowsPerPage, onChangePage } = props\r\n    const pages = Math.ceil(rowCount / rowsPerPage)\r\n\r\n    return (\r\n        <Pagination aria-label=\"Pagination Devs table\">\r\n            <PaginationItem disabled={currentPage < 2}>\r\n                <PaginationLink\r\n                    previous\r\n                    href=\"#\"\r\n                    className=\"text-primary\"\r\n                    onClick={e => {\r\n                        e.preventDefault()\r\n                        if (currentPage > 1) {\r\n                            onChangePage(currentPage - 1)\r\n                        }\r\n                    }} />\r\n            </PaginationItem>\r\n            {\r\n                <PaginationItem active>\r\n                    <PaginationLink href=\"#\" onClick={e => e.preventDefault()}>\r\n                        {currentPage}\r\n                    </PaginationLink>\r\n                </PaginationItem>\r\n            }\r\n            <PaginationItem>\r\n                <PaginationLink\r\n                    next\r\n                    href=\"#\"\r\n                    className=\"text-primary\"\r\n                    active={\"false\"}\r\n                    disabled={currentPage === pages}\r\n                    onClick={e => {\r\n                        e.preventDefault()\r\n                        onChangePage(currentPage + 1)\r\n                    }} />\r\n            </PaginationItem>\r\n        </Pagination >\r\n    )\r\n}\r\n\r\nexport default PaginationComponent","import { useEffect, useState } from 'react'\r\nimport DataTable from 'react-data-table-component'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row } from 'reactstrap'\r\nimport Spinner from 'reactstrap/lib/Spinner'\r\nimport { clientAxios } from '../../../configs/axiosConfig'\r\nimport { handleSetDevs } from '../../../redux/actions/devs'\r\nimport DropdownActions from './DropdownActions'\r\nimport PaginationComponent from '../pagination'\r\n\r\n\r\nconst DataTableComponent = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const devs = useSelector(state => state.devs.devs)\r\n    const [loadingTable, setLoadingTable] = useState(false)\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Nombre',\r\n            selector: 'developerName',\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Profesión',\r\n            selector: 'occupation',\r\n            sortable: true,\r\n            center: true\r\n        },\r\n        {\r\n            name: 'Posición',\r\n            selector: 'position',\r\n            sortable: true,\r\n            center: true\r\n        },\r\n        {\r\n            name: 'Tecnología',\r\n            selector: 'skill',\r\n            sortable: true,\r\n            center: true\r\n        },\r\n        {\r\n            name: 'Acción',\r\n            cell: row => <DropdownActions row={row} />,\r\n            sortable: true,\r\n            center: true\r\n        }\r\n    ]\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (devs.length === 0) {\r\n                setLoadingTable(true)\r\n                try {\r\n                    const { data } = await clientAxios.get(\"/developers\")\r\n                    const { result = [] } = data\r\n                    dispatch(handleSetDevs(result))\r\n                    setLoadingTable(false)\r\n                } catch (error) {\r\n                    setLoadingTable(false)\r\n                    console.log(error)\r\n                }\r\n            }\r\n        })()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <DataTable\r\n            progressPending={loadingTable}\r\n            progressComponent={<Spinner color=\"primary\" />}\r\n            noHeader={true}\r\n            columns={columns}\r\n            data={devs}\r\n            pagination\r\n            paginationPerPage={3}\r\n            noDataComponent=\"No hay registros\"\r\n            customStyles={{\r\n                headRow: {\r\n                    style: {\r\n                        backgroundColor: \"#f2f2f6\",\r\n                        color: \"#5f5872\"\r\n                    }\r\n                }\r\n            }}\r\n            paginationComponentOptions={{\r\n                rowsPerPageText: 'Filas por Página:',\r\n                rangeSeparatorText: 'de',\r\n                noRowsPerPage: false,\r\n                selectAllRowsItem: true,\r\n                selectAllRowsItemText: 'Todo'\r\n            }}\r\n            paginationComponent={pagination => <Row className=\"justify-content-between align-items-center mx-0\">\r\n                <>\r\n                    <p className=\"mb-0\">Mostrando {pagination.currentPage} de {Math.ceil(pagination.rowCount / pagination.rowsPerPage)} Entradas</p>\r\n                </>\r\n                <PaginationComponent {...pagination} />\r\n            </Row>}\r\n        />\r\n    )\r\n}\r\n\r\nexport default DataTableComponent","import { useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Card, CardHeader, CardBody, CardTitle } from 'reactstrap'\r\nimport Button from 'reactstrap/lib/Button'\r\nimport Breadcrumbs from '../@core/components/breadcrumbs'\r\nimport DataTableComponent from '../@core/components/react-data-bale'\r\nimport { handleChangeDev } from '../redux/actions/devs'\r\n\r\nconst Home = () => {\r\n\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumbs breadCrumbActive={{ label: \"Desarrolladores\" }} />\r\n      <Card>\r\n        <CardHeader className=\"border-bottom mb-3\">\r\n          <CardTitle>Tabla de Desarrolladores</CardTitle>\r\n          <Button color=\"primary\" onClick={e => {\r\n            e.preventDefault()\r\n            history.push(\"/agregar\")\r\n            dispatch(handleChangeDev({}))\r\n          }}>+ Agregar</Button>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <DataTableComponent />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\n// import { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Inicio</Link>\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    <Link to={breadCrumbParent?.to}>{breadCrumbParent?.label}</Link>\r\n                  </BreadcrumbItem>\r\n                ) : (null)\r\n                }\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    <Link to={breadCrumbParent2?.to}>{breadCrumbParent2?.label}</Link>\r\n                  </BreadcrumbItem>\r\n                ) : (null)\r\n                }\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    <Link to={breadCrumbParent3?.to}>{breadCrumbParent3?.label}</Link>\r\n                  </BreadcrumbItem>\r\n                ) : (null)\r\n                }\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive?.label}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  // breadCrumbTitle: Proptypes.string.isRequired,\r\n  // breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","import Swal from 'sweetalert2'\r\nexport const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n        toast.addEventListener('mouseenter', Swal.stopTimer)\r\n        toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n    }\r\n})\r\n"],"sourceRoot":""}